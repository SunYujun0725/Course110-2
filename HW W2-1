
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <ctype.h>
#define pathlen 250
#define File 250
#define Txt 4095
#define Txtlen 110

char file[File][pathlen]; //全域變數
char newfile[File][pathlen];
int filecount=0;
int check=-1;     //初始check最後一個單字是否為-i

char txt[Txt][Txtlen];
char newtxt[Txt][Txtlen];
char *ptr;
char *otherptr;
long o;

int token1(char *str){
    char *start=str;
    char delimeters[]=" ";
    start=strtok(start,delimeters);
    while(start!=NULL){
        strcpy(file[filecount],start);
        filecount++;
        assert(filecount<File);
        start=strtok(NULL,delimeters);
    }
    /*for(int i=0;i<filecount;i++){
        printf("%s\n",file[i]);
        printf("%ld\n",strlen(file[i]));
    }*/

    return 0;
}

int replacenoi(char *str1,char *old,char *new){  //沒有-i的replace
    long str1len=strlen(str1);
    long oldlen=strlen(old);
    long newlen=strlen(new);
    //printf("%ld\n",newlen);
    //printf("%ld\n",oldlen);
   
    for(long i=0;i<ptr-str1;i++){
        printf("%c",str1[i]);
    }
    for(long i=0;i<newlen-1;i++){
        printf("%c",new[i]);
    }
    if(oldlen>newlen){
        for(long i=ptr-str1+oldlen;i<str1len-(oldlen-newlen+1);i++){
            printf("%c",str1[i]);
        }
    }
    else{
        for(long i=ptr-str1+oldlen;i<str1len;i++){
            printf("%c",str1[i]);
        }
    }

    return 0;
}
int replace(char *str1,char *old,char *new,long o){  //有-i的replace
    long str1len=strlen(str1);
    long oldlen=strlen(old);
    long newlen=strlen(new);
    
    //printf("%ld\n",oldlen);
    //printf("%ld\n",newlen);
    
    for(long i=0;i<o;i++){
        printf("%c",str1[i]);
    }
    
    for(long i=0;i<newlen;i++){
        printf("%c",new[i]);
    }
    if(oldlen>=newlen){
        for(long i=o+oldlen;i<str1len;i++){
            printf("%c",str1[i]);
        }
    }
    else{
        for(long i=o+oldlen;i<str1len-(oldlen-newlen+1);i++){
            printf("%c",str1[i]);
        }
    }
    return 0;
}

int str(char *str1,char *str2){
    
    ptr=strstr(str1,str2);
    if(ptr==NULL){  //沒有
        //printf("沒有\n");
    }
    else{  //有
        replacenoi(str1,file[0],file[1]);
        printf("\n");
    }
    return 0;
}

int ortherstr(char *str1,char *str2,char *str3){
    otherptr=strstr(str1,str2);
    if(otherptr==NULL){  //沒有
        //printf("沒有\n");
    }
    else{  //有
        //printf("有\n");
        //printf("%ld\n",otherptr-str1);
        o=otherptr-str1;
        replace(str3,file[0],file[1],o);
        printf("\n");
    }
    return 0;
}

int cmp(char *str1,char *str2){
    check=-1;     //初始check最後一個單字是否為-i
    if (strlen(str1)==3){
        if(str1[0]=='-'&&str1[1]=='i'&&str1[2]=='\n'){
            check=0;
        }
    }
    else if(strlen(str1)==0){
        check=1;
    }
    else{
        check=-1;
    }
    return 0;
    
}
int main(){
    
    char pathname[pathlen];
    fgets(pathname,1000,stdin);
    token1(pathname);
    //假設最後一個單字是-i
    //printf("%s-----\n",file[2]);
    
  
    cmp(file[2],"-i");
    //printf("%ld",strlen(file[2]));
    //printf("%d\n",check);
    
    //printf("%s\n",file[filecount-1]);
    //假設最後一個單字是-i
    int i=0;
    int n=0;
    if(check==0){ //-i
        
        for(int k=0;k<strlen(file[0]);k++){
            if(islower(file[0][k])){   //如果為小寫
                newfile[0][k]=file[0][k]-32; //將file[0]全轉成大寫
            }
            else{
                newfile[0][k]=file[0][k];
            }
        }
        for(int k=0;k<strlen(file[1]);k++){
            if(islower(file[1][k])){   //如果為小寫
                newfile[1][k]=file[1][k]-32; //將file[1]全轉成大寫
            }
            else{
                newfile[1][k]=file[1][k];
            }
        }
        
        char str2=getchar();
        while(str2!=EOF){
            if((str2>=48&&str2<=57)||(str2>=65&&str2<=90)||(str2>=97&&str2<=122)||str2=='-'){
                 txt[i][n]=str2;
                 n++;
                 str2=getchar();
                 if((str2<48||(str2>57&&str2<65)||(str2>90&&str2<97)||str2>122)&&str2!='-'){
                     
                     i++;
                     n=0;
                     str2=getchar();
                 }
             }
            else{ //下一個要切
                str2=getchar();
            }
        }
        for(int j=0;j<i;j++){
            for(int k=0;k<strlen(txt[j]);k++){
                if(islower(txt[j][k])){
                    newtxt[j][k]=txt[j][k]-32; //將所有token轉成大寫
                }
                else{
                    newtxt[j][k]=txt[j][k];
                }
            }
            
        }
        for(int j=0;j<i;j++){
            //printf("%s %s %s\n",newtxt[j],newfile[0],txt[j]);
            ortherstr(newtxt[j],newfile[0],txt[j]);
        }
    }
    
    //假設最後一個單字不是-i
    else if(check==1){
        
        char str2=getchar();
        while(str2!=EOF){
           if((str2>=48&&str2<=57)||(str2>=65&&str2<=90)||(str2>=97&&str2<=122)||str2=='-'){
                txt[i][n]=str2;
                n++;
                str2=getchar();
                if((str2<48||(str2>57&&str2<65)||(str2>90&&str2<97)||str2>122)&&str2!='-'){
                    
                    i++;
                    n=0;
                    str2=getchar();
                }
            }
           else{ //下一個要切
               str2=getchar();
           }
        }
        for(int j=0;j<i;j++){
            //printf("%s\n",txt[j]);
            //printf("%s\n",file[0]);
            str(txt[j],file[0]);
        }
   }
    //都不是 錯誤！
    else{
        printf("The input format:string1 string2 [parameter]");
        
    }

    
    return 0;
}
