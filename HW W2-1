
//
//  main.c
//  HW W2-1
//
//  Created by 孫渝鈞 on 2022/3/1.
//

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <ctype.h>
#define pathlen 250
#define File 250
#define Txt 4095
#define Txtlen 110

char file[File][pathlen]; //全域變數
char newfile[File][pathlen];
int filecount=0;
int check=-1;     //初始check最後一個單字是否為-i
int end=0; //end=0繼續
char txt[Txt][Txtlen];
char newtxt[Txt][Txtlen];
char *ptr;
char *otherptr;
long o;

int token1(char *str){
    long strl=strlen(str);
    int filecount=0;
    int n=0;
    for(long i=0;i<strl;i++){
        if((str[i]<48||(str[i]>57&&str[i]<65)||(str[i]>90&&str[i]<97)||str[i]>122)&&str[i]!='-'&&str[i]!=' '&&str[i]!='\n'){
            end=1;
            
        }
        else if(str[i]==' '&&str[i+1]==' '){
            end=1;
        }
        else if(str[i]==' '&&((str[i+1]<48||(str[i+1]>57&&str[i+1]<65)||(str[i+1]>90&&str[i+1]<97)||str[i+1]>122)&&str[i+1]!='-'&&str[i+1]!='\n'&&str[i+1]!=' ')){
            end=1;
            
        }
        else if(str[i]==' '&&str[i+1]=='-'){
            filecount++;
            n=0;
            
        }
        else if(str[i]==' '&&((str[i+1]>=48&&str[i+1]<=57)||(str[i+1]>=65&&str[i+1]<=90)||(str[i+1]>=97&&str[i+1]<=122))){
            filecount++;
            n=0;
        
        }
        else if(str[i]==' '&&str[i+1]=='\n'){
            break;
        }
        else if(str[i]=='\n'){
            break;
        }
        else{
            file[filecount][n]=str[i];
            n++;
        }
    
    }
        
    /*printf("%d\n",filecount);
    for(int i=0;i<=filecount;i++){
        printf("%s\n",file[i]);
        for(int j=0;j<strlen(file[i]);j++){
            printf("%c\n",file[i][j]);
        }
        
    }*/
    if(filecount==0){
        end=1;
    }
    if(filecount>=3){
        end=1;
    }
    return 0;
}

int replacenoi(char *str1,char *old,char *new){  //沒有-i的replace
    long str1len=strlen(str1);
    long oldlen=strlen(old);
    long newlen=strlen(new);
    
   
    for(long i=0;i<ptr-str1;i++){
        printf("%c",str1[i]);
    }
    for(long i=0;i<newlen;i++){
        printf("%c",new[i]);
    }
    if(oldlen>newlen){
        for(long i=ptr-str1+oldlen;i<str1len;i++){
            printf("%c",str1[i]);
        }
    }
    else{
        for(long i=ptr-str1+oldlen;i<str1len;i++){
            printf("%c",str1[i]);
        }
    }

    return 0;
}
int replace(char *str1,char *old,char *new,long o){  //有-i的replace
    long str1len=strlen(str1);
    long oldlen=strlen(old);
    long newlen=strlen(new);
    
    //printf("%ld\n",oldlen);
    //printf("%ld\n",newlen);
    
    for(long i=0;i<o;i++){
        printf("%c",str1[i]);
    }
    
    for(long i=0;i<newlen;i++){
        printf("%c",new[i]);
    }
    if(oldlen>=newlen){
        for(long i=o+oldlen;i<str1len;i++){
            printf("%c",str1[i]);
        }
    }
    else{
        for(long i=o+oldlen;i<str1len;i++){
            printf("%c",str1[i]);
        }
    }
    return 0;
}

int str(char *str1,char *str2){
    
    ptr=strstr(str1,str2);
    if(ptr==NULL){  //沒有
        //printf("沒有\n");
    }
    else{  //有
        replacenoi(str1,file[0],file[1]);
        printf("\n");
    }
    return 0;
}

int ortherstr(char *str1,char *str2,char *str3){
    otherptr=strstr(str1,str2);
    if(otherptr==NULL){  //沒有
        //printf("沒有\n");
    }
    else{  //有
        //printf("有\n");
        //printf("%ld\n",otherptr-str1);
        o=otherptr-str1;
        replace(str3,file[0],file[1],o);
        printf("\n");
    }
    return 0;
}

int cmp(char *str1,char *str2){
    check=-1;     //初始check最後一個單字是否為-i
    if (strlen(str1)==2&&(str1[0]=='-'&&str1[1]=='i')){
        
        check=0;
    }
    else if(strlen(str1)!=0){
        check=-1;
    }
    else {
        check=1;
    }
    return 0;
    
}
int main(){
    
    char pathname[pathlen];
    fgets(pathname,249,stdin);
    token1(pathname);
    //假設最後一個單字是-i
    //printf("%s-----\n",file[2]);
    
    if(end==0){
        cmp(file[2],"-i");
        //printf("%ld",strlen(file[2]));
        //printf("%d\n",check);
    
        //printf("%s\n",file[filecount-1]);
        //假設最後一個單字是-i
        int i=0;
        int n=0;
        if(check==0){ //-i
        
            for(int k=0;k<strlen(file[0]);k++){
                if(islower(file[0][k])){   //如果為小寫
                    newfile[0][k]=file[0][k]-32; //將file[0]全轉成大寫
                }
                else{
                    newfile[0][k]=file[0][k];
                }
            }
            for(int k=0;k<strlen(file[1]);k++){
                if(islower(file[1][k])){   //如果為小寫
                    newfile[1][k]=file[1][k]-32; //將file[1]全轉成大寫
                }
                else{
                    newfile[1][k]=file[1][k];
                }
            }
        
            char str2=getchar();
            while(str2!=EOF){
                if((str2>=48&&str2<=57)||(str2>=65&&str2<=90)||(str2>=97&&str2<=122)||str2=='-'){
                    txt[i][n]=str2;
                    n++;
                    str2=getchar();
                    if((str2<48||(str2>57&&str2<65)||(str2>90&&str2<97)||str2>122)&&str2!='-'){
                     
                        i++;
                        n=0;
                        str2=getchar();
                    }
                }
                else{ //下一個要切
                    str2=getchar();
                }
            }
            for(int j=0;j<i;j++){
                for(int k=0;k<strlen(txt[j]);k++){
                    if(islower(txt[j][k])){
                        newtxt[j][k]=txt[j][k]-32; //將所有token轉成大寫
                    }
                    else{
                        newtxt[j][k]=txt[j][k];
                    }
                }
            
            }
            for(int j=0;j<i;j++){
                //printf("%s %s %s\n",newtxt[j],newfile[0],txt[j]);
                ortherstr(newtxt[j],newfile[0],txt[j]);
            }
        }
        //假設最後一個單字不是-i
        else if(check==1){
        
            char str2=getchar();
            while(str2!=EOF){
                if((str2>=48&&str2<=57)||(str2>=65&&str2<=90)||(str2>=97&&str2<=122)||str2=='-'){
                    txt[i][n]=str2;
                    n++;
                    str2=getchar();
                    if((str2<48||(str2>57&&str2<65)||(str2>90&&str2<97)||str2>122)&&str2!='-'){
                    
                        i++;
                        n=0;
                        str2=getchar();
                    }
                }
                else{ //下一個要切
                    str2=getchar();
                }
            }
            for(int j=0;j<i;j++){
                
                str(txt[j],file[0]);
            }
        }
        //都不是 錯誤！
        else{
            printf("The input format: string1 string2 [parameter]");
          
            return 0;
        }
    }
    
    else{
        printf("The input format: string1 string2 [parameter]");
        return 0;
    }

    return 0;
}
