//
//  main.c
//  HW W3-1
//
//  Created by 孫渝鈞 on 2022/3/14.
//
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <ctype.h>
#define pathlen 250
#define File 250
#define Txt 4095
#define Txtlen 110

char file[File][pathlen]; //全域變數
char newfile[File][pathlen];
int end=0; //end=0繼續
char txt[Txt][Txtlen];
char newtxt[Txt][Txtlen];

#define DEBUG 1
#define PRINTCASE(n) printf("this is case %d\n",n)

#define LOOPPRINT(start,end,str1)\
        for(long i=(start);i<(end);i++){\
            printf("%c",str1[i]);\
        }

#define LOOPPRINT1(start,end,str1)\
        for(long i=(start);i<(end);i++){\
            printf("%c",str1[i]);\
        }

#define LOOPPRINT2(start,end,str1,oldlen)\
        for(long i=(start+oldlen);i<(end);i++){\
            printf("%c",str1[i]);\
        }

#define ENDPRINT(end)\
        if(end==1){\
            printf("The input format: string1 string2 [parameter]");\
        }

int token(char *str){
    long strl=strlen(str);
    int filecount=0;
    int n=0;
    for(long i=0;i<strl;i++){
        if((str[i]<48||(str[i]>57&&str[i]<65)||(str[i]>90&&str[i]<97)||str[i]>122)&&str[i]!='-'&&str[i]!=' '&&str[i]!='\n'&&str[i]!='\r'){
            end=1;
            
        }
        else if(str[i]==' '&&str[i+1]==' '){
            end=1;
           
        }
        else if(str[i]==' '&&((str[i+1]<48||(str[i+1]>57&&str[i+1]<65)||(str[i+1]>90&&str[i+1]<97)||str[i+1]>122)&&str[i+1]!='-'&&str[i+1]!='\n'&&str[i+1]!='\r'&&str[i+1]!=' ')){
            end=1;
        
        }
        else if(str[i]==' '&&str[i+1]=='-'){
            filecount++;
            n=0;
            
        }
        else if(str[i]==' '&&((str[i+1]>=48&&str[i+1]<=57)||(str[i+1]>=65&&str[i+1]<=90)||(str[i+1]>=97&&str[i+1]<=122))){
            filecount++;
            n=0;
        
        }
        else if(str[i]==' '&&(str[i+1]=='\n'||str[i+1]=='\r')){
            break;
        }
        else if(str[i]=='\n'||str[i]=='\r'){
            break;
        }
        else{
            file[filecount][n]=str[i];
            n++;
        }
    
    }
    if(filecount==0){
        end=1;
        
    }
    if(filecount==2){
        if(strcmp(file[2],"-i")!=0){
            end=1;
          
        }
    }
    if(filecount>=3){
        end=1;
    
    }
    return 0;
}

int replace(char *str1,char *old,char *new,long o){
    long str1len=strlen(str1);
    long oldlen=strlen(old);
    long newlen=strlen(new);
    
    LOOPPRINT(0,o,str1);
    
    LOOPPRINT1(0,newlen,new);
    
    LOOPPRINT2(o,str1len,str1,oldlen);
    
    return 0;
}

int str(char *str1,char *str2){
    char *ptr;
    ptr=strstr(str1,str2);
    if(ptr!=NULL){  //有
        replace(str1,file[0],file[1],ptr-str1);
        printf("\n");
    }
    return 0;
}

int ortherstr(char *str1,char *str2,char *str3){
    char *ptr;
    ptr=strstr(str1,str2);
    if(ptr!=NULL){  //有
        replace(str3,file[0],file[1],ptr-str1);
        printf("\n");
    }
    return 0;
}

int main(){
    
    char pathname[pathlen];
    fgets(pathname,249,stdin);
    token(pathname);
    
#if DEBUG
    if(end==0){
        int i=0;
        int n=0;
        if(strcmp(file[2],"-i")==0){
        //假設最後一個單字是-i
            
        
            for(int k=0;k<strlen(file[0]);k++){
                if(islower(file[0][k])){   //如果為小寫
                    newfile[0][k]=file[0][k]-32; //將file[0]全轉成大寫
                }
                else{
                    newfile[0][k]=file[0][k];
                }
            }
            char str2=getchar();
            while(str2!=EOF){
                if((str2>=48&&str2<=57)||(str2>=65&&str2<=90)||(str2>=97&&str2<=122)||str2=='-'){
                    txt[i][n]=str2;
                    n++;
                    str2=getchar();
                    if((str2<48||(str2>57&&str2<65)||(str2>90&&str2<97)||str2>122)&&str2!='-'){
                     
                        i++;
                        n=0;
                        str2=getchar();
                    }
                }
                else{ //下一個要切
                    str2=getchar();
                }
            }
            PRINTCASE(1);  //printf("this is case 1\n");
            for(int j=0;j<i;j++){
                for(int k=0;k<strlen(txt[j]);k++){
                    if(islower(txt[j][k])){
                        newtxt[j][k]=txt[j][k]-32; //將所有token轉成大寫
                    }
                    else{
                        newtxt[j][k]=txt[j][k];
                    }
                }
            
            }
            for(int j=0;j<i;j++){
                printf("the word is: %s\n",txt[j]);
                ortherstr(newtxt[j],newfile[0],txt[j]);
            }
        
        }
        //假設最後一個單字不是-i
        else{
            char str2=getchar();
            while(str2!=EOF){
                if((str2>=48&&str2<=57)||(str2>=65&&str2<=90)||(str2>=97&&str2<=122)||str2=='-'){
                    txt[i][n]=str2;
                    n++;
                    str2=getchar();
                    if((str2<48||(str2>57&&str2<65)||(str2>90&&str2<97)||str2>122)&&str2!='-'){
                     
                        i++;
                        n=0;
                        str2=getchar();
                    }
                }
                else{ //下一個要切
                    str2=getchar();
                }
            }
            PRINTCASE(0);  //printf("this is case 0\n");
            for(int j=0;j<i;j++){
                printf("the word is: %s\n",txt[j]);
                str(txt[j],file[0]);
            }
        }
    }
    
    else{
        ENDPRINT(end);
        return 0;
    }
    
#endif
    
    return 0;
}
